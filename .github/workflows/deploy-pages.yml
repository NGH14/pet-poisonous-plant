name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Scrape Data"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if scrape workflow succeeded or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    permissions:
      contents: write # needed to push to gh-pages
      actions: read   # needed to list workflow runs for manual trigger

    steps:
      - name: Get workflow run ID
        id: get-run-id
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          else
            # For manual trigger, find the latest successful run of 'Scrape Data'
            run_id=$(gh run list --workflow "Scrape Data" --status success --json databaseId -q '.[0].databaseId' --repo "${{ github.repository }}")
            if [[ -z "$run_id" ]]; then
              echo "::error::No successful 'Scrape Data' workflow run found."
              exit 1
            fi
            echo "run_id=${run_id}" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download scraped data
        uses: actions/download-artifact@v4
        with:
          name: scraped-data
          path: deploy
          run-id: ${{ steps.get-run-id.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: deploy
          commit_message: 'chore: deploy data files to GitHub Pages'
          keep_history: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
