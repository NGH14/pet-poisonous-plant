name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Scrape Data"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    # Only run if scrape workflow succeeded or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Get workflow run ID
        id: get-run-id
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          else
            # For manual trigger, find the latest successful run of 'Scrape Data'
            run_id=$(gh run list --workflow "Scrape Data" --status success --json databaseId -q '.[0].databaseId' --repo "${{ github.repository }}")
            if [[ -z "$run_id" ]]; then
              echo "::error::No successful 'Scrape Data' workflow run found."
              exit 1
            fi
            echo "run_id=${run_id}" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download scraped data
        uses: actions/download-artifact@v4
        with:
          name: scraped-data
          path: deploy
          run-id: ${{ steps.get-run-id.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
